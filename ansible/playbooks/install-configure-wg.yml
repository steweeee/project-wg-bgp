---
- name: Configure WireGuard full mesh
  hosts: wg_bgp_group
  become: true
  vars:
    wg_listen_port: 51820
    wg_interface_name: wg99

  tasks:
    - name: Ensure WireGuard is installed
      ansible.builtin.apt:
        name: wireguard
        state: present

    - name: Ensure keys directory exists
      ansible.builtin.file:
        path: /etc/wireguard/keys
        state: directory
        mode: '0700'

    - name: Check if private key exists
      ansible.builtin.stat:
        path: "/etc/wireguard/keys/privatekey"
      register: private_key_stat

    - name: Generate new private key if not exists
      ansible.builtin.command: wg genkey
      when: not private_key_stat.stat.exists
      register: new_private_key

    - name: Get private key content if it already exists
      ansible.builtin.slurp:
        src: "/etc/wireguard/keys/privatekey"
      when: private_key_stat.stat.exists
      register: existing_private_key_content

    - name: Set private key fact for later use
      ansible.builtin.set_fact:
        private_key: "{{ new_private_key.stdout | default(existing_private_key_content.content | b64decode) | trim }}"

    - name: Generate public key from private key
      ansible.builtin.command: wg pubkey
      args:
        stdin: "{{ private_key }}"
      register: public_key_result

    - name: Save private key to file
      ansible.builtin.copy:
        content: "{{ private_key }}"
        dest: "/etc/wireguard/keys/privatekey"
        mode: '0600'

    - name: Set host public key as a fact
      ansible.builtin.set_fact:
        host_public_key: "{{ public_key_result.stdout | trim }}"
      
    - name: Gather all public keys from all hosts in the group
      ansible.builtin.set_fact:
        all_public_keys: "{{ groups['wg_bgp_group'] | map('extract', hostvars, 'host_public_key') | list }}"
      run_once: true
      delegate_to: localhost

    - name: Create WireGuard configuration file from template
      ansible.builtin.template:
        src: templates/wg99.conf.j2
        dest: "/etc/wireguard/{{ wg_interface_name }}.conf"
        mode: '0644'
      notify: Restart WireGuard

    - name: Enable and start WireGuard service
      ansible.builtin.systemd:
        name: "wg-quick@{{ wg_interface_name }}"
        state: started
        enabled: true

  handlers:
    - name: Restart WireGuard
      ansible.builtin.systemd:
        name: "wg-quick@{{ wg_interface_name }}"
        state: restarted